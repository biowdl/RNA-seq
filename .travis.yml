# We use conda to install cromwell.

language: python

python:
  - 3.6

services:
  - docker

before_install:
  # Install conda
  - export MINICONDA=${HOME}/miniconda
  - export PATH=${MINICONDA}/bin:${PATH}
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -f -p ${MINICONDA}
  - conda config --set always_yes yes
  - conda config --add channels defaults
  - conda config --add channels bioconda
  - conda config --add channels conda-forge

stages:
  - lint
  - test

stage: test

install:
  - conda install --file requirements-test.txt

script:
  - travis_wait 30 pytest --keep-workflow-wd-on-fail --tag $TEST tests/

matrix:
  include:
    - env:
      - TEST=Rna3PairedEndVariantCalling
      - _JAVA_OPTIONS="-Dconfig.file=tests/cromwell_config/docker.conf"
    - env:
      - TEST=Rna3PairedEndLncRna
      - _JAVA_OPTIONS="-Dconfig.file=tests/cromwell_config/docker.conf"
    - env: TEST=Rna3SingleEndLncRna
    - env:
      - TEST=Rna3PairedEndHisat2
      - _JAVA_OPTIONS="-Dconfig.file=tests/cromwell_config/docker.conf"
    - env:
      - TEST=Rna3PairedEndHisat2AndStar
      - _JAVA_OPTIONS="-Dconfig.file=tests/cromwell_config/docker.conf"
    - env: TEST="Womtool validate and submodule up to date"
      stage: lint
      install:
        - conda install cromwell miniwdl wdl-aid
      script: bash scripts/biowdl_lint.sh
      after_failure:
        - echo "Linting failed"
